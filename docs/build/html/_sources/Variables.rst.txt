TEST
=============

By `Robert Stewart <https://github.com/warvstar/>`_

Live Preview and Linter
-----------------------

The Live Preview shortcuts are

* ``ctrl+shift+r`` (on Mac ``cmd+shift+r``)               Preview
* ``ctrl+k ctrl+r`` (on Mac ``cmd+k cmd+r``)              Preview to Side

Linting is automatically enabled if the linter ``doc8`` is installed. The
linter scans the opened files and highlights those lines with issues
detected. The PROBLEMS tab should also show all issues detected for easy
navigation.

.. note:: A warning is displayed if ``doc8`` cannot be found.

Both features require Python and a few modules to be installed properly.

Install Python, Sphinx, and Others
----------------------------------
#. `Download python <https://www.python.org/downloads/>`_ version 3.4 or above
   (2.x might work, but no guarantee).

#. If you are installing on Windows, ensure both the Python install directory
   and the Python scripts directory have been added to your ``PATH``
   environment variable. For example, if you install Python into the
   ``c:\python34`` directory, you can add ``c:\python34;c:\python34\scripts``
   to your ``PATH`` environment variable.

   .. important:: It is recommended that you install `the Python extension by
      Microsoft
      <https://marketplace.visualstudio.com/items?itemName=ms-python.python>`_.
      It really makes configuring Python environment easier for users.

#. Install Sphinx by opening a command prompt and running the following Python
command.

   .. note:: This operation might take a few minutes to complete.

   .. code-block:: text

      pip install sphinx sphinx-autobuild

#. Install ``doc8`` to enable linter support.

   .. code-block:: text

      pip install doc8

.. note:: Latest steps on how to install Python and Sphinx, please refer to
   `this article
   <https://docs.readthedocs.io/en/latest/getting_started.html#in-rst>`_ .

Sample Project
--------------

Generate a sample project to test out this extension. The test project has the
following contents, like ``makefile``, ``conf.py``, and build folder. Then you
can better understand why the below settings are required.

.. code-block:: text

    mkdir sphinxtest
    cd sphinxtest
    sphinx-quickstart
    code .

Now this project is opened in Visual Studio Code.

By triggering a preview, this extension shows a list of options,

.. image:: _static/selection.png

Once an option is chosen, this extension is going to render the preview page
accordingly.

A status bar item is also added,

.. image:: _static/reset.png

By clicking this item, the selected option is reset, and the option list is
displayed once again.

Linter Settings
---------------
The linter support is based on ``doc8``.

Executable Path
:::::::::::::::
It expects ``doc8`` Python module to be installed and already added to the
path. If it is installed but cannot be found, add the path to your
preferences as seen below,

.. code-block:: json

    {
        "restructuredtext.linter.executablePath": "PathToExecutable"
    }

.. note:: This should be an absolute path.
   If you don't set this setting, but ``python.pythonPath``, then this extension
   will then pick up that setting instead. Also ``python.pythonPath`` should be
   an absolute path.

Lint onType or onSave or not at all
:::::::::::::::::::::::::::::::::::
By default the linter will lint on the fly but can be changed to linting as
you save. Note that linting on save is most useful when auto-save is on. Use
the setting below if to change the behavior with the values onType, onSave,
and off,

.. code-block:: json

    {
        "restructuredtext.linter.run": "onType"
    }

Live Preview Settings
---------------------
You might need to set three settings so as to let this extension locate the
generated HTML pages in some cases.

First, a new file ``.vscode/settings.json`` needs to be created under the root
directory shown in your Explorer tab in Visual Studio Code.

Its default content is as below,

.. code-block:: json

    {
        "restructuredtext.builtDocumentationPath" : "${workspaceRoot}/_build/html",
        "restructuredtext.confPath"               : "${workspaceRoot}",
        "restructuredtext.updateOnTextChanged"    : "true",
        "restructuredtext.updateDelay"            : 300,
        "restructuredtext.sphinxBuildPath"        : null
    }

.. note:: All settings are set to the default values.

A file with customized values might look as below,

.. code-block:: json

    {
        "restructuredtext.builtDocumentationPath" : "${workspaceRoot}/build/html",
        "restructuredtext.confPath"               : "${workspaceRoot}/source",
        "restructuredtext.updateOnTextChanged"    : "false",
        "restructuredtext.updateDelay"            : 1000,
        "restructuredtext.sphinxBuildPath"        : "C:\\Users\\lextm\\AppData\\Local\\Programs\\Python\\Python36\\Scripts\\sphinx-build.exe"
    }

Conf.py Path
::::::::::::
.. important:: For release 68.0.0 and above, this option is maintained
   automatically by the extension in most cases, so you don't need to modify it
   unless really neccessary.

   The meaning of this setting also changes. Now it stores the active preview
   option for the workspace/folder.

   * If it is ``""``, then ``rst2html.py`` is used to render the preview page.
   * If it is a valid folder, then ``conf.py`` from that folder is used by
     Sphinx to render the preview page.
   * If it is not set, then this extension shows a list of options before
     generating a preview page.

   It is not recommended to use ``rst2html.py``, as it does not work on Sphinx
   specific features, and the preview pages can look differently.

This extension relies on Sphinx ``conf.py`` to generate preview pages.

Usually when a Sphinx project is opened, ``conf.py`` is located at the root in
Explorer folder, and that's the default value ``${workspaceRoot}`` of
``restructuredtext.confPath``.

If you have ``conf.py`` at another location, then ``restructuredtext.confPath``
should point to the proper path, such as
``${workspaceRoot}/source``.

.. note:: This should be an absolute path.

.. important:: For release 68.0.0 and above, the ``conf.py`` file must be
   located within the root folder.

Sphinx Build Path (25.0 and above)
::::::::::::::::::::::::::::::::::
The value for ``restructuredtext.sphinxBuildPath`` above depends on your Python
installation.

On Windows Python can be installed to all possible locations and does not
appear in ``PATH`` environment variable. Then you must set this value to the
proper ``sphinx-build.exe`` file path.

.. note:: This should be an absolute path.
   If you don't set this setting, but ``python.pythonPath``, then this extension
   will then pick up that setting instead. Also ``python.pythonPath`` should be
   an absolute path.
